{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/diary/": {
            "get": {
                "tags": [
                    "diary"
                ],
                "description": "get all Diaries",
                "operationId": "DiaryController.GetAll",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Diary"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "diary"
                ],
                "description": "create diary",
                "operationId": "DiaryController.CreateDiary",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for diary content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.diary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} models.Diary.Id"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/diary/{id}": {
            "get": {
                "tags": [
                    "diary"
                ],
                "description": "get diary by id",
                "operationId": "DiaryController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Diary"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "diary"
                ],
                "description": "update the diary",
                "operationId": "DiaryController.Update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The uid you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Diary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Diary"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "diary"
                ],
                "description": "delete the diary",
                "operationId": "DiaryController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The uid you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/login/": {
            "post": {
                "tags": [
                    "logout"
                ],
                "description": "create Session",
                "operationId": "SessionController.Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Session content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/login/{id}": {
            "delete": {
                "tags": [
                    "logout"
                ],
                "description": "delete the Session",
                "operationId": "SessionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/logout/": {
            "post": {
                "tags": [
                    "logout"
                ],
                "description": "create Session",
                "operationId": "SessionController.Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Session content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/logout/{id}": {
            "delete": {
                "tags": [
                    "logout"
                ],
                "description": "delete the Session",
                "operationId": "SessionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/user/": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "create User",
                "operationId": "UserController.Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for User content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "get User by id",
                "operationId": "UserController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "description": "update the User",
                "operationId": "UserController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for User content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "description": "delete the User",
                "operationId": "UserController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Diary": {
            "title": "Diary",
            "type": "object",
            "properties": {
                "IsActive": {
                    "type": "integer",
                    "format": "int64"
                },
                "Title": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created": {
                    "type": "string",
                    "format": "datetime"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.User": {
            "title": "User",
            "type": "object",
            "properties": {
                "Comment": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "IsActive": {
                    "type": "integer",
                    "format": "int64"
                },
                "Name": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                },
                "created": {
                    "type": "string",
                    "format": "datetime"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.diary": {
            "title": "diary",
            "type": "object"
        }
    },
    "tags": [
        {
            "name": "diary",
            "description": "Operations about Diaries\n"
        },
        {
            "name": "user",
            "description": "UserController operations for User\n"
        },
        {
            "name": "login",
            "description": "SessionController operations for Session\n"
        },
        {
            "name": "logout",
            "description": "SessionController operations for Session\n"
        }
    ]
}